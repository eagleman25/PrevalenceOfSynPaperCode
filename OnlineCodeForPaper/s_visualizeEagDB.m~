% s_visualizeEagDB.m

% script which loads and then visualizes the eagleman database of
% grapheme-color synesthetes


% rgb has all our matching data
%   rgb                6588x3x26
% let's permute our rgb matrix so it is an image

p_rgb = permute(rgb, [1,3,2]);
%  p_rgb              6588x26x3


% unfortunately there are a few values which are just a tiny bit smaller
% than 0 and some which are a tiny bit larger than 1
% just reset those
p_rgb(p_rgb>1)=1;
p_rgb(p_rgb<0)=0;

% now we can look at the whole data set
% figure('name', 'all matches in eagleman database', 'Color', [1 1 1]);
% imagesc(p_rgb);
% ylabel('SUBJECTS');
% xlabel('LETTERS');
% set(gca,'XTick',[1:26],'XTickLabel',labels, 'TickDir','out', 'YDir','normal');
% box off;
% title('All letter-color matches in eagleman database');
% 


% let's assign a random rgb value to all the nans in order to break up any
% structure that comes from having nans all be black.

% get index to nans

indx =find(isnan(p_rgb));


% make a random rgb matrix of length index ,3 
randcolors = rand(length(indx),1);

randp_rgb=p_rgb;
% fill in the nans with random colors
randp_rgb(indx) =randcolors;


% now we can look at the whole data set

% now we can look at the whole data set
figure('name', 'all matches in eagleman database', 'Color', [1 1 1],'Position',get(0,'ScreenSize'));
subplot(1,2,1);
imagesc(p_rgb);
ylabel('SUBJECTS');
xlabel('LETTERS');
set(gca,'XTick',[1:26],'XTickLabel',labels, 'TickDir','out', 'YDir','normal');
box off;
title('nans are black');

subplot(1,2,2);
imagesc(randp_rgb);
ylabel('SUBJECTS');
xlabel('LETTERS');
set(gca,'XTick',[1:26],'XTickLabel',labels, 'TickDir','out', 'YDir','normal');
box off;
title('nans are a random color');

 


% can see some cool stuff already.  for example there are numerous letters
% which seem to be strongly associated with colors overall.
%  A : RED
%  B : BLUE
%  C : YELLOW
%  D : DARK?
%  G : GREEN?
%  H : PINK/ORANGE?
%  I : WHITE
%  L : LIGHT?
%  O : WHITE
%  P : PINK/PURPLE?
%  R : RED
%  S : YELLOW?
%  X : BLACK
%  Y : YELLOW


% what we would like to see is the histograms across subjects for each
% letter.  one way would be to convert each rgb value to hsv and then do
% the histogram around the hue circle.  this is on the to do list.
% unfortunately it rules out the white letters

% 
% % a second way is to plot the points on 3d plots where the axes are r,g,
% % and b, and look at if and how they cluster.
% % for each letter make a plot (later to be closed and saved as figures)
% i=11;
% % for i=1:1
% figure('name', ['matches for letter : ', labels(i)], 'Color', [1 1 1]);
% % what would be awesome would be to color each point by its rgb value
% clrs = squeeze(p_rgb(:,i,:));
% scatter3(p_rgb(:,i,1),p_rgb(:,i,2),p_rgb(:,i,3),20,clrs);
% xlabel('Red');ylabel('Green');zlabel('Blue');
% box off;
% 
% % end
% 
% 
% 
% % or we could plot every point in the data set just to see if it uniformly
% % covers the space (which it doesn't)
% figure('name','all colors generated in eagleman set across letters','Color',[1 1 1]);
% for i=1:26
%     clrs = squeeze(p_rgb(:,i,:));
%     scatter3(p_rgb(:,i,1),p_rgb(:,i,2),p_rgb(:,i,3),20,clrs);
%     hold on;
% end
% xlabel('Red');ylabel('Green');zlabel('Blue');
% box off;
% 


%  a third way is to convert each of the rgb values to a label and then compute
% make some histograms showing counts or proportions in each bin
% first we need to convert our rgbs to color labels.  At this point the
% conversion is done by lookup table.  the lookup table was generated by
% manually labelling thousands of colors (a grid that overlays the rgb
% space).  we interpolate to the nearest point to get the color.  at the
% moment this lookup seems to be 90-95% accurate so it could be better.
% that set of labels is called lRGBnathan.mat

% let's make our labeled database
% this function takes the rgb colors and converts them to numerical labels
% and converted to color names
[dbNumbered dbLabeled] = fpRGB2ColorsJW(rgb);


%   dbLabeled            6588x26                11947850  cell
%   dbNumbered           6588x26                 1370304  double

% get distribution of color choices for each letter
makeLetterXColorHist(dbNumbered);


% 
% fsize=get(gcf,'Position');
% set(gcf,'Position',[5 5 5*fsize(3) 5*fsize(4)]);
% saveas(gcf,'svgplots/letterHistsAll.jpg','jpg');
% 




format short g;

% want to slip a table in here too in the command window
disp(['letter  black  white  red    green  yellow blue   brown  purple pink   orange grey']);
for i=1:26
    [counts, bins]=hist(dbNumbered(:,i),11);
    counts  = counts/length(dbLabeled);
    disp([letters(i) '       ' num2str(counts,'%0.2f   ')]);
    
end

% would also like to convert the rgb to hsv.  matlab has a function for
% this, which I find absolutely never works correctly.  one problem is that
% the data contains some nans

% can see some cool stuff already.  for example there are numerous letters
% which seem to be strongly associated with colors overall.
%  A : RED
%  B : BLUE
%  C : YELLOW
%  D : DARK?
%  G : GREEN?
%  H : PINK/ORANGE?
%  I : WHITE
%  L : LIGHT?
%  O : WHITE
%  P : PINK/PURPLE?
%  R : RED
%  S : YELLOW?
%  X : BLACK
%  Y : YELLOW



% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
%
%   this section plots all the matches for each letter on 3d plots where
%   the axes are rgb.  as this is a lot of points these figures are slow to
%   make and adjust.
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %


% % what we would like to see is the histograms across subjects for each
% % letter.  one way would be to convert each rgb value to hsv and then do
% % the histogram around the hue circle.  this is on the to do list.
% % unfortunately it rules out the white letters
%
%
% % a second way is to plot the points on 3d plots where the axes are r,g,
% % and b, and look at if and how they cluster.
% % for each letter make a plot (later to be closed and saved as figures)
% i=11;
% % for i=1:1
% figure('name', ['matches for letter : ', labels(i)], 'Color', [1 1 1]);
% % what would be awesome would be to color each point by its rgb value
% clrs = squeeze(p_rgb(:,i,:));
% scatter3(p_rgb(:,i,1),p_rgb(:,i,2),p_rgb(:,i,3),20,clrs);
% xlabel('Red');ylabel('Green');zlabel('Blue');
% box off;
%
% % end
%
%
%
% % or we could plot every point in the data set just to see if it uniformly
% % covers the space (which it doesn't)
% figure('name','all colors generated in eagleman set across letters','Color',[1 1 1]);
% for i=1:26
%     clrs = squeeze(p_rgb(:,i,:));
%     scatter3(p_rgb(:,i,1),p_rgb(:,i,2),p_rgb(:,i,3),20,clrs);
%     hold on;
% end
% xlabel('Red');ylabel('Green');zlabel('Blue');
% box off;


